plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.openapi.generator" version "7.0.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/specs/openapi.yaml")
	outputDir.set(project.layout.buildDirectory.file("generated/$name").map {  it.asFile.absolutePath })
	modelPackage.set("com.example.codgen.model")
	apiPackage.set("com.example.codgen.api")
	invokerPackage.set("com.example.codgen.invoker")
	cleanupoutput.set(true)

	configOptions.set([
			dateLibrary: "java8",
			hideGenerationTimestamp: "true",
			interfaceOnly: "true",
	])
}

sourceSets {
	main{
		java {
			srcDir("build/genearated/src/main/java")
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.named('test') {
	useJUnitPlatform()
}
